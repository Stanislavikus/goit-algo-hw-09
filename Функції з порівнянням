import time

COINS = [50, 25, 10, 5, 2, 1]

def find_coins_greedy(amount):
    result = {}
    for coin in COINS:
        count = amount // coin
        if count > 0:
            result[coin] = count
            amount -= coin * count
    return result

def find_min_coins(amount):
    dp = [float('inf')] * (amount + 1)
    dp[0] = 0
    prev = [-1] * (amount + 1)

    for i in range(1, amount + 1):
        for coin in COINS:
            if i >= coin and dp[i - coin] + 1 < dp[i]:
                dp[i] = dp[i - coin] + 1
                prev[i] = coin

    result = {}
    current = amount
    while current > 0:
        coin = prev[current]
        if coin in result:
            result[coin] += 1
        else:
            result[coin] = 1
        current -= coin
    return result

# --- Benchmark ---
def benchmark(function, amount):
    start = time.time()
    result = function(amount)
    duration = time.time() - start
    return result, duration

amount = 113
greedy_result, greedy_time = benchmark(find_coins_greedy, amount)
dp_result, dp_time = benchmark(find_min_coins, amount)

print(f"Сума: {amount}")
print(f"Greedy: {greedy_result}, час: {greedy_time:.6f} сек")
print(f"DP: {dp_result}, час: {dp_time:.6f} сек")
